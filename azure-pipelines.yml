trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'windows-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    pool: 
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '6.x'
        checkLatest: true

    - script: npm install
      displayName: 'Install dependencies'

    - script: npm run build
      displayName: 'Build TypeScript App'

    - task: ArchiveFiles@2
      condition: succeeded()
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      condition: succeeded()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(tag)'
        publishLocation: 'Container'
- stage: Deploy
  jobs:
  - deployment: DeployToAzure
    pool: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure subscription 1(980c8982-757f-407e-bc5e-64d11d10ebe1)'
              appType: 'webApp'
              appName: 'buraktestapp1'
              deployToSlotOrASE: true
              resourceGroupName: 'rg1'
              slotName: 'production'
              package: '$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip'
              deploymentMethod: 'auto'